<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="DollMapper">



	<resultMap type="DollVo" id="DollVoResultMap">
		<result column="DOLL_ID" property="dollId"/>
		<result column="DOLL_SN" property="dollSn"/>	
		<result column="DOLL_NAME" property="dollName"/>	
		<result column="ROOM_ID" property="roomId"/>
		<result column="DOLL_STATE" property="dollState"/>
		<result column="DOLL_GOLD" property="dollGold"/>
		<result column="DOLL_URL" property="dollUrl"/>
		<result column="DOLL_CONVERSIONGOLD" property="dollConversiongold"/>
		<result column="CAMERA_NAME_01" property="cameraName01"/>
		<result column="CAMERA_NAME_02" property="cameraName02"/>
        <result column="DOLL_TAG" property="dollTag"/>
		<result column="TOY_ID" property="toy_id"/>
		<result column="DEVICE_TYPE" property="deviceType"/>
		<collection property="cameras" column="DOLL_ID" ofType="com.fh.vo.system.CameraVo">
	        <id property="cameraId" column="CAMERA_ID"/>
	        <result property="rtmpUrl" column="RTMP_URL"/>
	        <result property="h5Url" column="H5_URL"/>
	        <result property="serverName" column="SERVER_NAME"/>
	        <result property="livestream" column="LIVESTREAM"/>
	        <result property="cameraType" column="CAMERA_TYPE"/>
	        <result property="deviceState" column="DEVICE_STATE"/>
	    </collection>
	</resultMap>

    <!--表名 -->
    <sql id="tableName">
		SYS_APP_DOLL
	</sql>

    <sql id="gatewayTableName">
        TBL_GATEWAY_SESSION
    </sql>

    <!-- 字段 -->
    <sql id="Field">
		DOLL_SN,	
		DOLL_NAME,	
		ROOM_ID,	
		DOLL_STATE,	
		DOLL_ID,
		DOLL_GOLD,
		DOLL_URL,
		DOLL_CONVERSIONGOLD,
		CAMERA_NAME_01,
		CAMERA_NAME_02,
		TOY_ID,
		RELEASE_STATUS,
		DOLL_TAG,
		DOLL_TYPE,
		DEVICE_TYPE
	</sql>

    <!-- 字段值 -->
    <sql id="FieldValue">
		#{DOLL_SN},	
		#{DOLL_NAME},	
		#{ROOM_ID},	
		#{DOLL_STATE},	
		#{DOLL_ID},
		#{DOLL_GOLD},
		#{DOLL_URL},
		#{DOLL_CONVERSIONGOLD},
		#{CAMERA_NAME_01},
		#{CAMERA_NAME_02},
		#{TOY_ID},
		#{RELEASE_STATUS},
		#{DOLL_TAG},
		#{DOLL_TYPE},
		#{DEVICE_TYPE}
	</sql>

    <!-- 新增-->
    <insert id="save" parameterType="pd">
        insert into
        <include refid="tableName"></include>
        (
        <include refid="Field"></include>
        ) values (
        <include refid="FieldValue"></include>
        )
    </insert>

    <!-- 删除-->
    <delete id="delete" parameterType="pd">
        delete from
        <include refid="tableName"></include>
        where
        DOLL_ID = #{DOLL_ID}
    </delete>

    <!-- 修改 -->
    <update id="edit" parameterType="pd">
        update
        <include refid="tableName"></include>
        set
        DOLL_NAME = #{DOLL_NAME},
        
         <if test="DOLL_SN != null and DOLL_SN != ''">
        	DOLL_SN = #{DOLL_SN},
        </if>
        
        <if test="DOLL_GOLD != null and DOLL_GOLD != ''">
        	DOLL_GOLD = #{DOLL_GOLD},
        </if>
        
         <if test="DOLL_CONVERSIONGOLD != null and DOLL_CONVERSIONGOLD != ''">
         	DOLL_CONVERSIONGOLD = #{DOLL_CONVERSIONGOLD},
        </if>
        
        <if test="RELEASE_STATUS != null and RELEASE_STATUS != ''">
       		 RELEASE_STATUS = #{RELEASE_STATUS},
       	</if>
       	
        <if test="DOLL_URL != null and DOLL_URL != ''">
       	 	DOLL_URL = #{DOLL_URL},
        </if>
        <if test="ROOM_ID != null and ROOM_ID != ''">
        	ROOM_ID = #{ROOM_ID},
        </if>
        
        <if test="TOY_ID != null and TOY_ID != ''">
        	TOY_ID = #{TOY_ID},
         </if>
        
        DOLL_TYPE = #{DOLL_TYPE}
        
        where
        DOLL_ID = #{DOLL_ID}
    </update>

    <!-- 通过ID获取数据 -->
    <select id="findById" parameterType="pd" resultType="pd">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        where
        DOLL_ID = #{DOLL_ID}
    </select>

    <!-- 列表 -->
    <select id="dolllistPage" parameterType="page" resultType="pd">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        where 1=1
        <if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					DOLL_ID LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					DOLL_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					DOLL_SN LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					ROOM_ID LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
        </if>
        <if test="pd.RELEASE_STATUS != null and pd.RELEASE_STATUS != ''"><!-- 状态检索 -->
            AND RELEASE_STATUS = #{pd.RELEASE_STATUS}
        </if>
        <if test="pd.DOLL_TYPE != null and pd.DOLL_TYPE == &quot;Y&quot; "><!-- 状态检索 -->
           	AND	DOLL_TYPE=#{pd.DOLL_TYPE}
        </if>
        
		ORDER BY RELEASE_STATUS DESC, DOLL_ID DESC
    </select>

    <!-- 列表(全部) -->
    <select id="listAllPage" parameterType="pd" resultType="pd">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
    </select>

    <!-- 批量删除 -->
    <delete id="deleteAll" parameterType="String">
        delete from
        <include refid="tableName"></include>
        where
        DOLL_ID in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!--根据娃娃机sn号获取娃娃机对象-->
    <select id="getDollBySN" parameterType="String" resultType="com.fh.entity.system.Doll">
        SELECT
        <include refid="Field"/>
        FROM
        <include refid="tableName"/>
        WHERE
        DOLL_SN = #{DOLL_SN}

    </select>

    <!--根据娃娃机状态码获取娃娃机空闲中对象-->
    <select id="getDollByState" parameterType="String" resultType="com.fh.entity.system.Doll">
        SELECT
        <include refid="Field"/>
        FROM
        <include refid="tableName"/>
        WHERE
        DOLL_STATE =#{DOLL_STATE}

    </select>

    <!--通过ID获取娃娃机信息-->
    <select id="getDollByID" parameterType="String" resultType="com.fh.entity.system.Doll">
        SELECT
        <include refid="Field"/>
        FROM
        <include refid="tableName"/>
        WHERE
        DOLL_ID =#{DOLL_ID}

    </select>

    <!--获取娃娃机在线信息-->
    <select id="getAllDoll" parameterType="String" resultType="com.fh.entity.system.Doll">
        SELECT
        <include refid="Field"/>
        FROM
        <include refid="tableName"/>
    </select>
    <!--通过SN号注册娃娃机-->
    <insert id="regDollBySN" parameterType="String">
        insert into
        <include refid="tableName"/>
        (
	        DOLL_ID,
	        DOLL_SN,
	        RELEASE_STATUS,
	        DOLL_TYPE,
            DEVICE_TYPE

        ) values (
	        #{DOLL_ID},
	        #{DOLL_SN},
	        '0',
	        'N',
            #{DEVICE_TYPE}
        )

    </insert>
    <!--通过doll_id查询娃娃机-->
    <select id="getDollBySessionOnLine" parameterType="String" resultType="Doll">
        SELECT
        d.DOLL_SN,
        d.DOLL_NAME,
        d.DOLL_ID,
        d.DOLL_GOLD,
        d.DOLL_URL
        FROM
        <include refid="tableName"/>
        d
        INNER JOIN
        <include refid="gatewayTableName"/>
        g
        ON
        d.Doll_ID = g.ROOM_ID
    </select>

    <!-- 通过娃娃机的名字获取娃娃信息-->
    <select id="getDollByDollName" parameterType="String" resultType="Doll">
        SELECT
        *
        FROM
        <include refid="tableName"/>
        WHERE
        DOLL_NAME = #{DOLL_NAME}
    </select>


    <!-- 通过娃娃机的名字获取娃娃信息-->
    <select id="getDollVoList" resultMap="DollVoResultMap">
        SELECT
	    	d.DOLL_SN,	
			d.DOLL_NAME,	
			d.ROOM_ID,	
			d.DOLL_STATE,	
			d.DOLL_ID,
			d.DOLL_GOLD,
			d.DOLL_URL,
			d.DOLL_CONVERSIONGOLD,
			d.DOLL_TAG,
			c.CAMERA_ID,
			c.CAMERA_TYPE,
			c.RTMP_URL,
			c.H5_URL,
			c.SERVER_NAME,
			c.LIVESTREAM,
			c.DEVICE_STATE from
			SYS_APP_DOLL d LEFT JOIN TB_DEVICE_CAMERA c ON d.DOLL_ID=c.DOLL_ID
			WHERE d.RELEASE_STATUS ='1'
			ORDER BY DOLL_SN ,CAMERA_TYPE
    </select>
    
    
        <!-- 通过娃娃机的名字获取娃娃信息-->
    <select id="getDolllistPage" resultMap="DollVoResultMap" parameterType="page">
        SELECT
	    	d.DOLL_SN,	
			d.DOLL_NAME,	
			d.ROOM_ID,	
			d.DOLL_STATE,	
			d.DOLL_ID,
			d.DOLL_GOLD,
			d.DOLL_URL,
			d.DOLL_CONVERSIONGOLD,
            d.DEVICE_TYPE,
			c.CAMERA_ID,
			c.CAMERA_TYPE,
			c.RTMP_URL,
			c.H5_URL,
			c.SERVER_NAME,
			c.LIVESTREAM,
			c.DEVICE_STATE
			from
			SYS_APP_DOLL d
		  LEFT JOIN TB_DEVICE_CAMERA c ON d.DOLL_ID=c.DOLL_ID
			LEFT JOIN (
				SELECT TOY_ID,GROUP_CONCAT(TYPE_ID) AS 'TYPE_ID_LIST',GROUP_CONCAT(TYPE_NAME) AS 'TYPE_NAME_LIST' FROM (
				SELECT dt.TOY_ID,
					ty.id as 'TYPE_ID',
					ty.TOY_TYPE as 'TYPE_NAME'
					from tb_app_doll_toy dt 
					INNER  JOIN tb_toy_toytype td on td.TOY_ID=dt.TOY_ID
			  INNER  JOIN tb_toytype ty on ty.ID=td.TOY_TYPE_ID ) t GROUP BY TOY_ID 
			  ) t1 on t1.TOY_ID=d.TOY_ID
				
		WHERE d.RELEASE_STATUS ='1' 
		 <if test="pd.currentType!= null and pd.currentType != ''"><!-- 关键词检索 -->
			AND t1.TYPE_ID_LIST LIKE CONCAT(CONCAT('%',#{pd.currentType},'%'))
		 </if>
		 <if test="pd.channel != null and pd.channel == &quot;H5&quot;"><!-- 关键词检索 -->
		 	AND	d.DOLL_TYPE='Y'
		 </if>
		 AND d.DOLL_STATE in ('FREE','USING','BUSY')
	ORDER BY DOLL_SN ,CAMERA_TYPE
	
    </select>
    
    <select id="dollCountlistPage" parameterType="page" resultType="pd">
    SELECT * FROM (
	SELECT 
	
		ad.DOLL_ID,
		ad.DOLL_NAME,
		ad.DOLL_SN, 
		IFNULL(d.PALYCOUNT,0) as PALYCOUNT,
		IFNULL(d.CAUGHTCOUNT ,0) as CAUGHTCOUNT,
		(IFNULL(d.CAUGHTCOUNT ,0)/IFNULL(d.PALYCOUNT,1)) as PROBABILITY
		FROM SYS_APP_DOLL ad 
	LEFT JOIN 
	(
		SELECT d3.DOLLID,SUM(d3.PALYCOUNT) as PALYCOUNT,SUM(d3.CAUGHTCOUNT) as CAUGHTCOUNT FROM (
		
			SELECT  
				d1.DOLLID,
				0 as PALYCOUNT, 
				COUNT(1) as CAUGHTCOUNT 
				FROM TB_DOLL_PLAY_DETAIL d1
				WHERE 1=1
				  <if test="pd.lastStart != null and pd.lastStart != ''">
				 	AND date_format( d1.CREATE_DATE,'%Y-%m-%d') &gt;= str_to_date(#{pd.lastStart}, '%Y-%m-%d %H:%i:%s')
				 </if>
				 <if test="pd.lastEnd != null and pd.lastEnd != ''">
				 	AND date_format( d1.CREATE_DATE,'%Y-%m-%d') &lt;= str_to_date(#{pd.lastEnd}, '%Y-%m-%d %H:%i:%s')
				 </if>
				 AND d1.STATE='1'
				 GROUP BY  d1.DOLLID
	UNION 
	
		SELECT
			d2.DOLLID,
			COUNT(1) as PALYCOUNT, 
			0 as CAUGHTCOUNT 
			FROM TB_DOLL_PLAY_DETAIL d2
			where 1=1
			
			  	<if test="pd.lastStart != null and pd.lastStart != ''">
					AND date_format( d2.CREATE_DATE,'%Y-%m-%d') &gt;= str_to_date(#{pd.lastStart}, '%Y-%m-%d %H:%i:%s')
				</if>
				<if test="pd.lastEnd != null and pd.lastEnd != ''">
					AND date_format( d2.CREATE_DATE,'%Y-%m-%d') &lt;= str_to_date(#{pd.lastEnd}, '%Y-%m-%d %H:%i:%s')
				</if>
		GROUP BY  d2.DOLLID ) d3 GROUP BY d3.DOLLID )  d ON d.DOLLID=ad.DOLL_ID
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					ad.DOLL_ID LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					ad.DOLL_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					ad.DOLL_SN LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
        </if>
		ORDER BY ad.RELEASE_STATUS DESC ) S ORDER BY PROBABILITY DESC
	</select>

    <!-- 通过娃娃机的名字获取娃娃信息-->
    <select id="getDollVoListByTag" parameterType="String" resultMap="DollVoResultMap">
        SELECT
        d.DOLL_SN,
        d.DOLL_NAME,
        d.ROOM_ID,
        d.DOLL_STATE,
        d.DOLL_ID,
        d.DOLL_GOLD,
        d.DOLL_URL,
        d.DOLL_CONVERSIONGOLD,
        d.DOLL_TAG,
        c.CAMERA_ID,
        c.CAMERA_TYPE,
        c.RTMP_URL,
        c.SERVER_NAME,
        c.LIVESTREAM,
        c.DEVICE_STATE from
        SYS_APP_DOLL d LEFT JOIN TB_DEVICE_CAMERA c ON d.DOLL_ID=c.DOLL_ID
        WHERE d.RELEASE_STATUS ='1'
        AND d.DOLL_TAG = #{doll_tag}
        ORDER BY DOLL_SN ,CAMERA_TYPE
    </select>

<!--分类别查询出相应的娃娃机-->
    <select id="getDollTypeList"  parameterType="java.lang.Integer" resultMap="DollVoResultMap">
            select
            d.DOLL_SN,
			d.DOLL_NAME,
			d.ROOM_ID,
			d.DOLL_STATE,
			d.DOLL_ID,
			d.DOLL_GOLD,
			d.DOLL_URL,
			d.DOLL_CONVERSIONGOLD,
			c.CAMERA_ID,
			c.CAMERA_TYPE,
			c.RTMP_URL,
			c.SERVER_NAME,
			c.LIVESTREAM,
			c.DEVICE_STATE from
            (select t.id ,t.toy_type,y.toy_id
            from
            tb_toytype t
            left join
            tb_toy_toytype y
            on y.toy_type_id = #{ID}
            where t.id = #{ID}) m
            left join
            sys_app_doll  d
            on d.toy_id = m.toy_id
            and d.RELEASE_STATUS ='1'
            left join
            TB_DEVICE_CAMERA c
            ON d.DOLL_ID = c.DOLL_ID
            ORDER BY DOLL_SN ,CAMERA_TYPE
    </select>

    <select id="getAllDollListByRelease" resultType="pd">
        SELECT
        DOLL_ID,
        DOLL_SN,	
		DOLL_STATE,	
		RELEASE_STATUS
        FROM
        <include refid="tableName"/>
        WHERE
        RELEASE_STATUS = '1'
    </select>

	<update id="updateDollStateByDollId" parameterType="pd">
        update
        <include refid="tableName"></include>
        set
        DOLL_STATE = #{DOLL_STATE}
        where
        DOLL_ID = #{DOLL_ID}
    </update>
</mapper>