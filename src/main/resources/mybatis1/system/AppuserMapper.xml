<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AppuserMapper">

    <!--表名 -->
    <sql id="tableName">
		SYS_APP_USER
	</sql>

    <!-- 字段 -->
    <sql id="Field">
		USER_ID,
		USERNAME,
		PASSWORD,
		NAME,
		RIGHTS,
		ROLE_ID,
		LAST_LOGIN,
		IP,
		STATUS,
		BZ,
		PHONE,
		SFID,
		START_TIME,
		END_TIME,
		YEARS,
		IMAGE_URL,
		NUMBER,
		CREATETIME,
		ADDRESS,
		EMAIL,
		BALANCE,
		DOLLTOTAL,
		NICKNAME,
		CNEE_PHONE,
		CNEE_ADDRESS,
		CNEE_NAME

	</sql>

    <!-- 字段值 -->
    <sql id="FieldValue">
		#{USER_ID},
		#{USERNAME},
		#{PASSWORD},
		#{NAME},
		#{RIGHTS},
		#{ROLE_ID},
		#{LAST_LOGIN},
		#{IP},
		#{STATUS},
		#{BZ},
		#{PHONE},
		#{SFID},
		#{START_TIME},
		#{END_TIME},
		#{YEARS},
		#{IMAGE_URL},
		#{NUMBER},
		#{CREATETIME},
		#{ADDRESS},
		#{EMAIL},
		#{BALANCE},
		#{DOLLTOTAL},
		#{NICKNAME},
		#{CNEE_PHONE},
		#{CNEE_ADDRESS},
		#{CNEE_NAME}
	</sql>

    <!-- 角色表 -->
    <sql id="roleTableName">
		SYS_ROLE
	</sql>

    <!-- 列出某角色下的所有会员 -->
    <select id="listAllAppuserByRorlid" parameterType="pd" resultType="pd">
        select
        USER_ID
        from
        <include refid="tableName"/>
        where
        ROLE_ID = #{ROLE_ID}
    </select>

    <!-- 会员列表 -->
    <select id="userlistPage" parameterType="page" resultType="pd">
        select
        u.USER_ID,
        u.USERNAME,
        u.`NAME`,
        u.RIGHTS,
        u.ROLE_ID,
        u.NICKNAME,
        u.LAST_LOGIN,
        u.IP,
        u.`STATUS`,
        u.BZ,
        u.PHONE,
        u.SFID,
        u.START_TIME,
        u.END_TIME,
        u.YEARS,
        u.NUMBER,
        u.EMAIL,
        u.CREATETIME,
        u.IMAGE_URL,
        u.BALANCE
        FROM
        <include refid="tableName"/>
        u
        where 1 = 1
        <if test="pd.keywords != null and pd.keywords!= ''"><!-- 关键词检索 -->
            and (
            u.USERNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            or
            u.EMAIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            or
            u.NUMBER LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            or
            u.NICKNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            )
        </if>
        <if test="pd.ROLE_ID != null and pd.ROLE_ID != ''"><!-- 角色检索 -->
            and u.ROLE_ID=#{pd.ROLE_ID}
        </if>
        <if test="pd.lastLoginStart!=null and pd.lastLoginStart!=''"><!-- 到期时间检索 -->
            and u.END_TIME &gt;= #{pd.lastLoginStart}
        </if>
        <if test="pd.lastLoginEnd!=null and pd.lastLoginEnd!=''"><!-- 到期时间检索 -->
            and u.END_TIME &lt;= #{pd.lastLoginEnd}
        </if>
        <if test="pd.STATUS != null and pd.STATUS != ''"><!-- 状态检索 -->
            and u.STATUS=#{pd.STATUS}
        </if>
        
        <if test="pd.ORDESTR != null and pd.ORDESTR != ''"><!-- 状态检索 -->
       			 
        </if>
        <choose>  
             <when test="pd.ORDERSTR == null || pd.ORDERSTR == '' ">order by u.CREATETIME DESC</when>  
             <when test="pd.ORDERSTR != null and pd.ORDERSTR == 'ASC'">order by u.BALANCE+0 ASC</when>
             <when test="pd.ORDERSTR != null and pd.ORDERSTR == 'DESC'">order by u.BALANCE+0 DESC</when>  
          </choose>
    </select>

    <!-- 通过USERNAME获取数据 -->
    <select id="findByUsername" parameterType="pd" resultType="pd">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        where
        USERNAME = #{USERNAME}
    </select>

    <!-- 通过邮箱获取数据 -->
    <select id="findByEmail" parameterType="pd" resultType="pd">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        where
        EMAIL = #{EMAIL}
        <if test="USERNAME != null and USERNAME != ''">
            and USERNAME != #{USERNAME}
        </if>
    </select>

    <!-- 通过编号获取数据 -->
    <select id="findByNumber" parameterType="pd" resultType="pd">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        where
        NUMBER = #{NUMBER}
        <if test="USERNAME != null and USERNAME != ''">
            and USERNAME != #{USERNAME}
        </if>
    </select>

    <!-- 新增会员 -->
    <insert id="saveU" parameterType="pd">
        insert into
        <include refid="tableName"/>
        (
        <include refid="Field"/>
        ) values (
        <include refid="FieldValue"/>
        )
    </insert>

    <!-- 删除用户 -->
    <delete id="deleteU" parameterType="pd">
        delete from
        <include refid="tableName"/>
        where
        USER_ID = #{USER_ID}
    </delete>

    <!-- 修改 -->
    <update id="editU" parameterType="pd">
        update
        <include refid="tableName"/>
        set USERNAME = #{USERNAME},
        NAME = #{NAME},
        ROLE_ID = #{ROLE_ID},
        BZ = #{BZ},
        PHONE = #{PHONE},
        SFID = #{SFID},
        START_TIME = #{START_TIME},
        END_TIME = #{END_TIME},
        STATUS = #{STATUS},
        EMAIL = #{EMAIL},
        NUMBER = #{NUMBER}
        <if test="PASSWORD != null and PASSWORD != ''">
            ,PASSWORD = #{PASSWORD}
        </if>
        where
        USER_ID = #{USER_ID}
    </update>

    <!-- 通过ID获取数据 -->
    <select id="findByUiId" parameterType="pd" resultType="pd">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        where
        USER_ID = #{USER_ID}
    </select>

    <!-- 全部会员 -->
    <select id="listAllUser" parameterType="pd" resultType="pd">
        select u.USER_ID,
        u.USERNAME,
        u.PASSWORD,
        u.LAST_LOGIN,
        u.NAME,
        u.IP,
        u.END_TIME,
        u.YEARS,
        u.STATUS,
        u.EMAIL,
        u.PHONE,
        u.SFID,
        u.NUMBER,
        r.ROLE_ID,
        r.ROLE_NAME,
        u.CREATETIME
        from
        <include refid="tableName"/>
        u,
        <include refid="roleTableName"/>
        r
        where u.ROLE_ID = r.ROLE_ID
        and /*r.PARENT_ID = '2'*/
        <if test="keywords != null and keywords!= ''"><!-- 关键词检索 -->
            and (
            u.USERNAME LIKE CONCAT(CONCAT('%', #{keywords}),'%')
            or
            u.EMAIL LIKE CONCAT(CONCAT('%', #{keywords}),'%')
            or
            u.NUMBER LIKE CONCAT(CONCAT('%', #{keywords}),'%')
            )
        </if>
        <if test="ROLE_ID != null and ROLE_ID != ''"><!-- 角色检索 -->
            and u.ROLE_ID=#{ROLE_ID}
        </if>
        <if test="lastLoginStart!=null and lastLoginStart!=''"><!-- 到期时间检索 -->
            and u.END_TIME &gt;= #{lastLoginStart}
        </if>
        <if test="lastLoginEnd!=null and lastLoginEnd!=''"><!-- 到期时间检索 -->
            and u.END_TIME &lt;= #{lastLoginEnd}
        </if>
        <if test="STATUS != null and STATUS != ''"><!-- 状态检索 -->
            and u.STATUS=#{STATUS}
        </if>
        order by u.CREATETIME
    </select>

    <!-- 批量删除用户 -->
    <delete id="deleteAllU" parameterType="String">
        delete from
        <include refid="tableName"/>
        where
        USER_ID in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- 获取总数 -->
    <select id="getAppUserCount" parameterType="String" resultType="pd">
        select
        count(USER_ID) appUserCount
        from
        <include refid="tableName"/>
    </select>
    <!-- 通过手机号码获取用户信息 2017/10/12-->
    <select id="getUserByPhone" parameterType="String" resultType="com.fh.entity.system.AppUser">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        where
        PHONE = #{PHONE}
    </select>
    <!--修改昵称-->
    <update id="updateNickName" parameterType="com.fh.entity.system.AppUser">
		UPDATE
		sys_app_user
		SET
		NICKNAME = #{NICKNAME}
		WHERE
		USER_ID = #{USER_ID}
	</update>

    <!-- 通过id获取用户信息 2017/10/12-->
    <select id="getUserByID" parameterType="String" resultType="com.fh.entity.system.AppUser">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        where
        USER_ID = #{USER_ID}
    </select>

    <!--根据用户昵称获取用户信息-->
    <select id="getAppUserByNickName" parameterType="String" resultType="com.fh.entity.system.AppUser">
		SELECT
		*
		FROM
		sys_app_user
		where
		NICKNAME = #{NICKNAME}
	</select>

    <select id="getAppUserByNickNameList"  parameterType="String" resultType="com.fh.entity.system.AppUser">
        SELECT
		*
		FROM
		sys_app_user
		where
		NICKNAME = #{NICKNAME}
    </select>

    <!-- 用户注册 2017/10/12-->
    <insert id="reg">
        insert into
        <include refid="tableName"/>
        (
        USER_ID,
        PHONE,
        CREATETIME,
        USERNAME,
        NICKNAME
        ) values (
        #{USER_ID},
        #{PHONE},
        now(),
        #{PHONE},
        #{NICKNAME}
        )
    </insert>
    <!--更改App用户信息-->
    <update id="updateAppUser" parameterType="String">
        update
        <include refid="tableName"/>
        set
        USERNAME = #{USERNAME},
        ADDRESS = #{ADDRESS}
        WHERE
        USER_ID = #{USER_ID}
    </update>
    <!--更改App头像信息-->
    <update id="updateAppUserImage" parameterType="com.fh.entity.system.AppUser">
        update
        <include refid="tableName"/>
        set
        IMAGE_URL = #{IMAGE_URL}
        WHERE
        USER_ID = #{USER_ID}
    </update>

    <!--更改App用户昵称信息(废弃)-->
    <update id="updateAppUserName" parameterType="com.fh.entity.system.AppUser">
        update
        <include refid="tableName"/>
        set
        USERNAME = #{USERNAME}
        WHERE
        USER_ID = #{USER_ID}
    </update>

    <!--用户余额更改-->
    <update id="updateAppUserBalanceByPhone" parameterType="com.fh.entity.system.AppUser">
        update
        <include refid="tableName"/>
        set
        BALANCE = #{BALANCE}
        WHERE
        USER_ID = #{USER_ID}
    </update>

    <update id="updateAppUserBalanceById" parameterType="com.fh.entity.system.AppUser">
        update
        <include refid="tableName"/>
        set
        BALANCE = #{BALANCE}
        WHERE
        USER_ID = #{USER_ID}
    </update>

    <!--用户抓取娃娃数量更改-->
    <update id="updateAppUserDollTotalById" parameterType="com.fh.entity.system.AppUser">
        update
        <include refid="tableName"/>
        set
        DOLLTOTAL = #{DOLLTOTAL}
        WHERE
        USER_ID = #{USER_ID}
    </update>


    <!-- 查询前20名抓娃娃最多的用户 -->
    <select id="rankList" resultType="com.fh.entity.system.AppUser">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        where
        DOLLTOTAL >= 0
        ORDER BY
        DOLLTOTAL
        DESC
        limit
        0,20
    </select>

    <!--更新收货人信息地址-->
    <update id="updateAppUserCnee" parameterType="com.fh.entity.system.AppUser">
        update
        <include refid="tableName"/>
        set
        CNEE_PHONE = #{CNEE_PHONE},
        CNEE_ADDRESS = #{CNEE_ADDRESS},
        CNEE_NAME = #{CNEE_NAME}
        WHERE
        USER_ID = #{USER_ID}
    </update>

    <insert id="regwx" parameterType="com.fh.entity.system.AppUser">
        insert into
        <include refid="tableName"/>
        (
        USER_ID,
        CREATETIME,
        NICKNAME,
        IMAGE_URL

        ) values (
        #{USER_ID},
        now(),
        #{NICKNAME},
        #{IMAGE_URL}
        )
    </insert>

    <update id="updateTencentUser" parameterType="com.fh.entity.system.AppUser">
		UPDATE
		sys_app_user
		SET
		NICKNAME = #{NICKNAME},
		IMAGE_URL= #{IMAGE_URL}
		WHERE
		USER_ID = #{USER_ID}
	</update>

    <select id="testuser" parameterType="com.fh.entity.system.AppUser" resultType="com.fh.entity.system.AppUser">
        SELECT * FROM sys_app_user where nickname = #{NICKNAME} AND phone = #{PHONE}
    </select>

    <select id="getAppUserList" resultType="com.fh.entity.system.AppUser">
        SELECT a.USER_ID , a.SIGN_TAG FROM sys_app_user AS a WHERE a.SIGN_TAG = '1'
    </select>

    <update id="updateAppUserSB" parameterType="com.fh.entity.system.AppUser">
        UPDATE
        sys_app_user
		SET
		BALANCE = #{BALANCE},
		SIGN_TAG = #{SIGN_TAG}
		WHERE
		USER_ID = #{USER_ID}
    </update>

    <update id="updateAppUserSign" parameterType="com.fh.entity.system.AppUser">
        UPDATE
        sys_app_user
		SET
		SIGN_TAG = #{SIGN_TAG}
		WHERE
		USER_ID = #{USER_ID}
    </update>

    <!--用户余额更改-->
    <update id="updateAppUserBalanceNew" parameterType="com.fh.entity.system.AppUser">
        update
        <include refid="tableName"/>
        set
        BALANCE = #{BALANCE}
        WHERE
        USER_ID = #{USER_ID}
    </update>

    <!-- 通过id获取用户信息 -->
    <select id="getUserAppById" parameterType="String" resultType="com.fh.entity.system.AppUser">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        where
        USER_ID = #{USER_ID} FOR UPDATE
    </select>

    <!--获取个人排名-->
    <select id="getAppUserRanklist" parameterType="String" resultType="com.fh.entity.system.AppUser">
        select * from
        (select u.user_id,u.nickname ,u.dolltotal,u.image_url,
        (@rownum := @rowNum + 1) as RANK from sys_app_user u , (select (@rownum := 0))
        b order by dolltotal desc ,createtime ) p
        where
        p.user_id = #{USER_ID}
    </select>
    
     <!-- 会员游戏统计列表 -->
    <select id="getAppUserGamelistPage" parameterType="page" resultType="pd"> 
   		 SELECT * FROM (
			SELECT 
			au.USER_ID,
			au.NICKNAME,
			au.`NAME`,
			au.BALANCE,
			IFNULL(d.PALYCOUNT,0) as PALYCOUNT,
			IFNULL(d.CAUGHTCOUNT ,0) as CAUGHTCOUNT,
			(IFNULL(d.CAUGHTCOUNT ,0)/IFNULL(d.PALYCOUNT,1)) as PROBABILITY,
			IFNULL(ao.REGAMOUNT,0) as REGAMOUNT
			 from sys_app_user au
			LEFT JOIN (
			SELECT 
			 d3.USERID,
			SUM(d3.PALYCOUNT) as PALYCOUNT,
			 SUM(d3.CAUGHTCOUNT) as CAUGHTCOUNT FROM ( 
			
			SELECT d1.USERID, 0 as PALYCOUNT, COUNT(1) as CAUGHTCOUNT FROM TB_DOLL_PLAY_DETAIL d1 WHERE 1=1
			<if test="pd.lastStart != null and pd.lastStart != ''">
				 	AND date_format( d1.CREATE_DATE,'%Y-%m-%d') &gt;= str_to_date(#{pd.lastStart}, '%Y-%m-%d %H:%i:%s')
			 </if>
			 <if test="pd.lastEnd != null and pd.lastEnd != ''">
			 	AND date_format( d1.CREATE_DATE,'%Y-%m-%d') &lt;= str_to_date(#{pd.lastEnd}, '%Y-%m-%d %H:%i:%s')
			 </if>
			AND d1.STATE='1' GROUP BY d1.USERID 
			
			UNION 
			SELECT d2.USERID, 
			COUNT(1) as PALYCOUNT, 
			0 as CAUGHTCOUNT FROM TB_DOLL_PLAY_DETAIL d2 
			where 1=1 
				<if test="pd.lastStart != null and pd.lastStart != ''">
					AND date_format( d2.CREATE_DATE,'%Y-%m-%d') &gt;= str_to_date(#{pd.lastStart}, '%Y-%m-%d %H:%i:%s')
				</if>
				<if test="pd.lastEnd != null and pd.lastEnd != ''">
					AND date_format( d2.CREATE_DATE,'%Y-%m-%d') &lt;= str_to_date(#{pd.lastEnd}, '%Y-%m-%d %H:%i:%s')
				</if>
			GROUP BY d2.USERID
			) d3
			 GROUP BY d3.USERID  ) d on d.USERID=au.USER_ID
			
			LEFT JOIN 
			 (
				SELECT o.USER_ID,sum(o.REGAMOUNT)/100 as REGAMOUNT from sys_app_order o where 1=1 and o.STATUS='1' GROUP BY o.USER_ID
			) ao on ao.USER_ID=au.USER_ID
			
			where 1 = 1
        	<if test="pd.keywords != null and pd.keywords!= ''"><!-- 关键词检索 -->
	            and (
		            au.USER_ID LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
		            or
		            au.NICKNAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
	            )
        	</if>
        
        ) S ORDER BY PROBABILITY DESC
	</select>
	
	 <select id="getAppUesrRechargeToTal" parameterType="String" resultType="pd">
		SELECT 
		au.USER_ID,
		au.NICKNAME,
		au.`NAME` ,
		(
			SELECT IFNULL(SUM(REGAMOUNT),0) as REGAMOUNT FROM SYS_APP_ORDER WHERE USER_ID=au.USER_ID AND `STATUS`='1'
		) as REGAMOUNT
		FROM SYS_APP_USER au WHERE  au.USER_ID=#{userId}
		</select>

    <update id="updateAppUserBlAndBnById" parameterType="com.fh.entity.system.AppUser">
        update
        <include refid="tableName"/>
        set
        BALANCE = #{BALANCE},
        BET_NUM = #{BET_NUM}
        WHERE
        USER_ID = #{USER_ID}

    </update>

    <!-- 查询前20名竞猜获胜最多的用户 -->
    <select id="rankBetList" resultType="pd">
        select
        BET_NUM,NICKNAME,IMAGE_URL,USER_ID
        from
        <include refid="tableName"/>
        where
        BET_NUM >= 0
        ORDER BY
        BET_NUM
        DESC,
        createtime
        ASC
        limit
        0,20
    </select>

    <!--获取竞猜个人排名-->
    <select id="getAppUserBetRanklist" parameterType="String" resultType="pd">
        select * from
        (select u.USER_ID,u.NICKNAME ,u.BET_NUM,u.IMAGE_URL,
        (@rownum := @rowNum + 1) as RANK from sys_app_user u , (select (@rownum := 0))
        b order by bet_num desc ,createtime ) p
        where
        p.user_id = #{USER_ID}
    </select>


</mapper>